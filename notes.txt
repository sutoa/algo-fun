1. find sqrt
    a. log solution ans = pow(10, log10(num)/2); this is not a perfect solution; for num = 808201, it does not work due to decimal number
    b. binary search; left, right and everything declared as long; otherwise the product can be negative even if it's declared as long but mid is int
2. remove K digits to get the smallest number
    a. remove digit if it's greater than the digit to the right
    b. pollLast of Deque returns the beginning of the list; Also, pollLast is slow; use poll and reverse at the end when converting from stack to string
3. circular array max sum
    a. when max straddles the circular edge, then it's like removing the min chunk from the total sum of the array. this is not the case when the max does not cross over because taking out a chunk in the middle would break the string
4. odd/even linkedlist  (5/19/20)
    a. maintain 2 pointers; one for where to insert; one for what to take out
    b. the pointers should be pointing at BEFORE the insert and remove positions due to one dimension
5. stock span (5/20)
    a. we can folder previous spans as long as they are smaller because we don't need the break down to calculate the next number
    b. for foldering/collapsing items, Deque is the structure to use
